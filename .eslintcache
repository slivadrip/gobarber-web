[{"C:\\projetos\\gobarber-web\\src\\App.tsx":"1","C:\\projetos\\gobarber-web\\src\\index.tsx":"2","C:\\projetos\\gobarber-web\\src\\pages\\Signin\\index.tsx":"3","C:\\projetos\\gobarber-web\\src\\pages\\Signin\\styles.ts":"4","C:\\projetos\\gobarber-web\\src\\components\\Button\\styles.ts":"5","C:\\projetos\\gobarber-web\\src\\components\\Input\\styles.ts":"6","C:\\projetos\\gobarber-web\\src\\components\\Input\\index.tsx":"7","C:\\projetos\\gobarber-web\\src\\components\\Button\\index.tsx":"8","C:\\projetos\\gobarber-web\\src\\pages\\SignIn\\styles.ts":"9","C:\\projetos\\gobarber-web\\src\\pages\\SignIn\\index.tsx":"10","C:\\projetos\\gobarber-web\\src\\pages\\SignUp\\styles.ts":"11","C:\\projetos\\gobarber-web\\src\\pages\\SignUp\\index.tsx":"12","C:\\projetos\\gobarber-web\\src\\utils\\getValidationErrors.ts":"13","C:\\projetos\\gobarber-web\\src\\components\\Tooltip\\index.tsx":"14","C:\\projetos\\gobarber-web\\src\\components\\Tooltip\\styles.ts":"15","C:\\projetos\\gobarber-web\\src\\services\\api.ts":"16","C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\styles.ts":"17","C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\index.tsx":"18","C:\\projetos\\gobarber-web\\src\\hooks\\auth.tsx":"19","C:\\projetos\\gobarber-web\\src\\hooks\\toast.tsx":"20","C:\\projetos\\gobarber-web\\src\\hooks\\index.tsx":"21","C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.tsx":"22","C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx":"23","C:\\projetos\\gobarber-web\\src\\routes\\Route.tsx":"24","C:\\projetos\\gobarber-web\\src\\routes\\index.tsx":"25","C:\\projetos\\gobarber-web\\src\\pages\\Dashboard\\index.tsx":"26","C:\\projetos\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts":"27","C:\\projetos\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx":"28","C:\\projetos\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx":"29","C:\\projetos\\gobarber-web\\src\\components\\Header\\index.tsx":"30","C:\\projetos\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts":"31","C:\\projetos\\gobarber-web\\src\\pages\\Dashboard\\styles.ts":"32","C:\\projetos\\gobarber-web\\src\\components\\Header\\styles.ts":"33","C:\\projetos\\gobarber-web\\src\\pages\\Profile\\index.tsx":"34"},{"size":354,"mtime":1609157259647,"results":"35","hashOfConfig":"36"},{"size":198,"mtime":1608553607501,"results":"37","hashOfConfig":"38"},{"size":892,"mtime":1608561309586,"results":"39","hashOfConfig":"40"},{"size":1783,"mtime":1608561374672,"results":"41","hashOfConfig":"40"},{"size":380,"mtime":1608561267361,"results":"42","hashOfConfig":"43"},{"size":1118,"mtime":1608574653137,"results":"44","hashOfConfig":"36"},{"size":1556,"mtime":1608574762909,"results":"45","hashOfConfig":"43"},{"size":372,"mtime":1609792638597,"results":"46","hashOfConfig":"36"},{"size":2714,"mtime":1609157570672,"results":"47","hashOfConfig":"36"},{"size":2775,"mtime":1609791680811,"results":"48","hashOfConfig":"36"},{"size":2509,"mtime":1609157592385,"results":"49","hashOfConfig":"36"},{"size":2862,"mtime":1609159281541,"results":"50","hashOfConfig":"36"},{"size":352,"mtime":1608572919633,"results":"51","hashOfConfig":"36"},{"size":367,"mtime":1608574460708,"results":"52","hashOfConfig":"43"},{"size":747,"mtime":1608574449216,"results":"53","hashOfConfig":"54"},{"size":116,"mtime":1608640295780,"results":"55","hashOfConfig":"56"},{"size":163,"mtime":1608657616959,"results":"57","hashOfConfig":"56"},{"size":750,"mtime":1608657828778,"results":"58","hashOfConfig":"56"},{"size":2144,"mtime":1609865558531,"results":"59","hashOfConfig":"54"},{"size":1449,"mtime":1608656440775,"results":"60","hashOfConfig":"54"},{"size":272,"mtime":1608654859082,"results":"61","hashOfConfig":"36"},{"size":1234,"mtime":1608657459008,"results":"62","hashOfConfig":"56"},{"size":1188,"mtime":1608657926697,"results":"63","hashOfConfig":"56"},{"size":801,"mtime":1609158634750,"results":"64","hashOfConfig":"36"},{"size":802,"mtime":1609793264384,"results":"65","hashOfConfig":"36"},{"size":6922,"mtime":1609855531656,"results":"66","hashOfConfig":"54"},{"size":2509,"mtime":1609791234135,"results":"67","hashOfConfig":"36"},{"size":2813,"mtime":1609792614967,"results":"68","hashOfConfig":"36"},{"size":3157,"mtime":1609793519548,"results":"69","hashOfConfig":"36"},{"size":954,"mtime":1609848415343,"results":"70","hashOfConfig":"36"},{"size":2714,"mtime":1609792987215,"results":"71","hashOfConfig":"36"},{"size":3444,"mtime":1609847250599,"results":"72","hashOfConfig":"36"},{"size":892,"mtime":1609847905017,"results":"73","hashOfConfig":"36"},{"size":5186,"mtime":1609865494019,"results":"74","hashOfConfig":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"811wbt",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lka2nf",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i4861b",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nk47zn",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h8gn8o",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xd4n93",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},"C:\\projetos\\gobarber-web\\src\\App.tsx",[],"C:\\projetos\\gobarber-web\\src\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\Signin\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\Signin\\styles.ts",["148"],"C:\\projetos\\gobarber-web\\src\\components\\Button\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\Input\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\Input\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\components\\Button\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\SignIn\\styles.ts",[],["149","150","151","152","153"],"C:\\projetos\\gobarber-web\\src\\pages\\SignIn\\index.tsx",["154","155"],"C:\\projetos\\gobarber-web\\src\\pages\\SignUp\\styles.ts",[],["156","157","158","159","160"],"C:\\projetos\\gobarber-web\\src\\pages\\SignUp\\index.tsx",["161"],"import React, { useCallback, useRef, useState } from 'react';\nimport { FiMail, FiUser, FiLock, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\n\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.svg';\nimport api from '../../services/api';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/toast';\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: []) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail valido'),\n          password: Yup.string().min(6, 'No minino 6 digitos'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('users', data);\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado',\n          description: 'Você já pode fazer seu logon no GoBarber',\n        });\n\n        setLoading(false);\n\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          setLoading(false);\n\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer cadastro, cheque seus dados',\n        });\n      }\n    },\n    [addToast, history],\n  );\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"goBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu Logon</h1>\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"e-mail\" />\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para logon\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","C:\\projetos\\gobarber-web\\src\\utils\\getValidationErrors.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\Tooltip\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\components\\Tooltip\\styles.ts",["162"],"C:\\projetos\\gobarber-web\\src\\services\\api.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\hooks\\auth.tsx",[],"C:\\projetos\\gobarber-web\\src\\hooks\\toast.tsx",[],"C:\\projetos\\gobarber-web\\src\\hooks\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\Toast\\styles.tsx",["163"],"C:\\projetos\\gobarber-web\\src\\components\\ToastContainer\\Toast\\index.tsx",["164"],"C:\\projetos\\gobarber-web\\src\\routes\\Route.tsx",[],"C:\\projetos\\gobarber-web\\src\\routes\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\Dashboard\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\ForgotPassword\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\pages\\ForgotPassword\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\ResetPassword\\index.tsx",["165","166","167","168","169"],"import React, { useCallback, useRef, useState } from 'react';\nimport { FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport queryString from 'query-string';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport logoImg from '../../assets/logo.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport api from '../../services/api';\n\ninterface ResetPasswordFormData {\n  password: string;\n  password_confirmation: string;\n}\nconst ResetPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const [loading, setLoading] = useState(false);\n\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatório'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password')],\n            'Senhas diferentes',\n          ),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        // const { token } = queryString.parse(location.search);\n\n        if (!token) {\n          throw new Error();\n        }\n\n        // Doesn't make sense to await this action\n        api.post('/password/reset', {\n          password: data.password,\n          passwordConfirmation: data.password_confirmation,\n          token,\n        });\n        setLoading(false);\n\n        // history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'success',\n          title: 'Erro ao resetar a senha',\n          description:\n            'Ocorreu um erro ao resetar sua senha, cheque as credenciais',\n        });\n      }\n    },\n    [addToast, history],\n  );\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"goBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Resetar Senha</h1>\n\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Nova Senha\"\n            />\n\n            <Input\n              name=\"password_confirmation\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Confirmação da Senha\"\n            />\n            <Button type=\"submit\">Alterar Senha</Button>\n            <Link to=\"/forgot-password\"> Esqueci minha senha</Link>\n          </Form>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n","C:\\projetos\\gobarber-web\\src\\components\\Header\\index.tsx",[],"C:\\projetos\\gobarber-web\\src\\pages\\ResetPassword\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\pages\\Dashboard\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\components\\Header\\styles.ts",[],"C:\\projetos\\gobarber-web\\src\\pages\\Profile\\index.tsx",["170","171"],"import React, { ChangeEvent, useCallback, useRef, useState } from 'react';\nimport { FiMail, FiUser, FiLock, FiArrowLeft, FiCamera } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\n\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport { Container, Header, Content, AvatarInput } from './styles';\nimport logoImg from '../../assets/logo.svg';\nimport api from '../../services/api';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../hooks/toast';\nimport { useAuth } from '../../hooks/auth';\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  password: string;\n  oldPassword: string;\n  passwordConfirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite email válido')\n            .required('Email obrigatório'),\n          oldPassword: Yup.string(),\n          password: Yup.string().when('oldPassword', {\n            is: String,\n            then: Yup.string().min(6),\n            otherwise: Yup.string(),\n          }),\n          passwordConfirmation: Yup.string()\n            .when('oldPassword', {\n              is: String,\n              then: Yup.string().required('Campo obrigatório'),\n              otherwise: Yup.string(),\n            })\n            .oneOf([Yup.ref('password')], 'Senhas diferentes'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const {\n          name,\n          email,\n          oldPassword,\n          password,\n          passwordConfirmation,\n        } = data;\n\n        const formData = {\n          name,\n          email,\n          ...(oldPassword\n            ? {\n                oldPassword,\n                password,\n                passwordConfirmation,\n              }\n            : {}),\n        };\n\n        console.log(formData);\n\n        const response = await api.put('/profile', formData);\n\n        updateUser(response.data);\n\n        history.push('/dashboard');\n\n        addToast({\n          type: 'success',\n          title: 'Perfil alterado',\n          description: 'Suas alterações foram salvas com sucesso',\n        });\n\n        history.push('/');\n      } catch (err) {\n        const errors = getValidationErrors(err);\n\n        formRef.current?.setErrors(errors);\n\n        addToast({\n          type: 'error',\n          title: 'Erro na atualização',\n          description: 'Ocorreu um erro ao atualizar o perfil',\n        });\n      }\n    },\n    [addToast, history, updateUser],\n  );\n\n  const handleAvatarChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (event.target.files) {\n        const data = new FormData();\n\n        data.append('avatar', event.target.files[0]);\n\n        api\n          .patch('/users/avatar', data)\n          .then((response) => {\n            updateUser(response.data);\n\n            addToast({\n              type: 'success',\n              title: 'Avatar atualizado',\n            });\n          })\n          .catch(() => {\n            addToast({\n              type: 'error',\n              title: 'Erro ao atualizar avatar',\n            });\n          });\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  return (\n    <Container>\n      <Header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </Header>\n      <Content>\n        <img src={logoImg} alt=\"goBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n          <h1>Meu Perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} type=\"text\" placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} type=\"email\" placeholder=\"E-mail\" />\n          <Input\n            name=\"oldPassword\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha atual\"\n          />\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova senha\"\n          />\n          <Input\n            name=\"passwordConfirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirme a nova senha\"\n          />\n          <Button type=\"submit\">Confirmar mudanças</Button>\n        </Form>\n        <Link to=\"/\">\n          <FiArrowLeft />\n          Voltar para logon\n        </Link>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n",{"ruleId":"172","severity":1,"message":"173","line":1,"column":18,"nodeType":"174","messageId":"175","endLine":1,"endColumn":27},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"172","severity":1,"message":"186","line":23,"column":10,"nodeType":"174","messageId":"175","endLine":23,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":67,"column":5,"nodeType":"189","endLine":67,"endColumn":23,"suggestions":"190"},{"ruleId":"176","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"180","replacedBy":"193"},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"172","severity":1,"message":"186","line":22,"column":10,"nodeType":"174","messageId":"175","endLine":22,"endColumn":17},{"ruleId":"172","severity":1,"message":"196","line":1,"column":18,"nodeType":"174","messageId":"175","endLine":1,"endColumn":21},{"ruleId":"197","severity":2,"message":"198","line":2,"column":26,"nodeType":"199","endLine":2,"endColumn":40},{"ruleId":"200","severity":2,"message":"201","line":15,"column":10,"nodeType":"202","messageId":"203","endLine":15,"endColumn":16},{"ruleId":"172","severity":1,"message":"204","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":19},{"ruleId":"205","severity":2,"message":"206","line":8,"column":25,"nodeType":"199","endLine":8,"endColumn":39},{"ruleId":"172","severity":1,"message":"207","line":15,"column":10,"nodeType":"174","messageId":"175","endLine":15,"endColumn":17},{"ruleId":"172","severity":1,"message":"186","line":25,"column":10,"nodeType":"174","messageId":"175","endLine":25,"endColumn":17},{"ruleId":"187","severity":1,"message":"208","line":79,"column":5,"nodeType":"189","endLine":79,"endColumn":24,"suggestions":"209"},{"ruleId":"172","severity":1,"message":"210","line":1,"column":51,"nodeType":"174","messageId":"175","endLine":1,"endColumn":59},{"ruleId":"211","severity":1,"message":"212","line":84,"column":9,"nodeType":"213","messageId":"214","endLine":84,"endColumn":20},"@typescript-eslint/no-unused-vars","'keyframes' is defined but never used.","Identifier","unusedVar","lines-around-directive",["215"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["216"],["215"],[],[],[],[],"'css' is defined but never used.","import/no-unresolved","Unable to resolve path to module 'react-spring'.","Literal","@typescript-eslint/ban-types","Don't use `object` as a type. The `object` type is currently hard to use ([see this issue](https://github.com/microsoft/TypeScript/issues/21732)).\nConsider using `Record<string, unknown>` instead, as it allows you to more easily inspect and use the keys.","TSObjectKeyword","bannedTypeMessage","'queryString' is defined but never used.","import/no-extraneous-dependencies","'query-string' should be listed in the project's dependencies. Run 'npm i -S query-string' to add it","'useAuth' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array.",["217"],"'useState' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [signIn, history, addToast]",{"range":"222","text":"223"},"Update the dependencies array to be: [addToast]",{"range":"224","text":"225"},[1958,1976],"[signIn, history, addToast]",[2304,2323],"[addToast]"]